/**
 * eZmax API Definition
 * This API expose all the functionnalities for the eZmax and eZsign applications.
 *
 * The version of the OpenAPI document: 1.0.42
 * Contact: support-api@ezmax.ca
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { EzsignsignatureCreateObjectV1Request } from '../models';
import { EzsignsignatureCreateObjectV1Response } from '../models';
import { EzsignsignatureDeleteObjectV1Response } from '../models';
import { EzsignsignatureGetObjectV1Response } from '../models';
/**
 * ObjectEzsignsignatureApi - axios parameter creator
 * @export
 */
export declare const ObjectEzsignsignatureApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * The endpoint allows to create one or many elements at once.  The array can contain simple (Just the object) or compound (The object and its child) objects.  Creating compound elements allows to reduce the multiple requests to create all child objects.
     * @summary Create a new Ezsignsignature
     * @param {Array<EzsignsignatureCreateObjectV1Request>} ezsignsignatureCreateObjectV1Request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureCreateObjectV1: (ezsignsignatureCreateObjectV1Request: Array<EzsignsignatureCreateObjectV1Request>, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete an existing Ezsignsignature
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureDeleteObjectV1: (pkiEzsignsignatureID: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Retrieve an existing Ezsignsignature\'s children IDs
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureGetChildrenV1: (pkiEzsignsignatureID: number, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @summary Retrieve an existing Ezsignsignature
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureGetObjectV1: (pkiEzsignsignatureID: number, options?: any) => Promise<RequestArgs>;
};
/**
 * ObjectEzsignsignatureApi - functional programming interface
 * @export
 */
export declare const ObjectEzsignsignatureApiFp: (configuration?: Configuration) => {
    /**
     * The endpoint allows to create one or many elements at once.  The array can contain simple (Just the object) or compound (The object and its child) objects.  Creating compound elements allows to reduce the multiple requests to create all child objects.
     * @summary Create a new Ezsignsignature
     * @param {Array<EzsignsignatureCreateObjectV1Request>} ezsignsignatureCreateObjectV1Request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureCreateObjectV1(ezsignsignatureCreateObjectV1Request: Array<EzsignsignatureCreateObjectV1Request>, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EzsignsignatureCreateObjectV1Response>>;
    /**
     *
     * @summary Delete an existing Ezsignsignature
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureDeleteObjectV1(pkiEzsignsignatureID: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EzsignsignatureDeleteObjectV1Response>>;
    /**
     *
     * @summary Retrieve an existing Ezsignsignature\'s children IDs
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureGetChildrenV1(pkiEzsignsignatureID: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Retrieve an existing Ezsignsignature
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureGetObjectV1(pkiEzsignsignatureID: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EzsignsignatureGetObjectV1Response>>;
};
/**
 * ObjectEzsignsignatureApi - factory interface
 * @export
 */
export declare const ObjectEzsignsignatureApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * The endpoint allows to create one or many elements at once.  The array can contain simple (Just the object) or compound (The object and its child) objects.  Creating compound elements allows to reduce the multiple requests to create all child objects.
     * @summary Create a new Ezsignsignature
     * @param {Array<EzsignsignatureCreateObjectV1Request>} ezsignsignatureCreateObjectV1Request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureCreateObjectV1(ezsignsignatureCreateObjectV1Request: Array<EzsignsignatureCreateObjectV1Request>, options?: any): AxiosPromise<EzsignsignatureCreateObjectV1Response>;
    /**
     *
     * @summary Delete an existing Ezsignsignature
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureDeleteObjectV1(pkiEzsignsignatureID: number, options?: any): AxiosPromise<EzsignsignatureDeleteObjectV1Response>;
    /**
     *
     * @summary Retrieve an existing Ezsignsignature\'s children IDs
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureGetChildrenV1(pkiEzsignsignatureID: number, options?: any): AxiosPromise<void>;
    /**
     *
     * @summary Retrieve an existing Ezsignsignature
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ezsignsignatureGetObjectV1(pkiEzsignsignatureID: number, options?: any): AxiosPromise<EzsignsignatureGetObjectV1Response>;
};
/**
 * ObjectEzsignsignatureApi - object-oriented interface
 * @export
 * @class ObjectEzsignsignatureApi
 * @extends {BaseAPI}
 */
export declare class ObjectEzsignsignatureApi extends BaseAPI {
    /**
     * The endpoint allows to create one or many elements at once.  The array can contain simple (Just the object) or compound (The object and its child) objects.  Creating compound elements allows to reduce the multiple requests to create all child objects.
     * @summary Create a new Ezsignsignature
     * @param {Array<EzsignsignatureCreateObjectV1Request>} ezsignsignatureCreateObjectV1Request
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectEzsignsignatureApi
     */
    ezsignsignatureCreateObjectV1(ezsignsignatureCreateObjectV1Request: Array<EzsignsignatureCreateObjectV1Request>, options?: any): Promise<import("axios").AxiosResponse<any>>;
    /**
     *
     * @summary Delete an existing Ezsignsignature
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectEzsignsignatureApi
     */
    ezsignsignatureDeleteObjectV1(pkiEzsignsignatureID: number, options?: any): Promise<import("axios").AxiosResponse<any>>;
    /**
     *
     * @summary Retrieve an existing Ezsignsignature\'s children IDs
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectEzsignsignatureApi
     */
    ezsignsignatureGetChildrenV1(pkiEzsignsignatureID: number, options?: any): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @summary Retrieve an existing Ezsignsignature
     * @param {number} pkiEzsignsignatureID The unique ID of the Ezsignsignature
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ObjectEzsignsignatureApi
     */
    ezsignsignatureGetObjectV1(pkiEzsignsignatureID: number, options?: any): Promise<import("axios").AxiosResponse<any>>;
}
